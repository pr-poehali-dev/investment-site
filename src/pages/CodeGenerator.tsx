import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';
import { useToast } from '@/hooks/use-toast';

interface GeneratedInvestor {
  code: string;
  name: string;
  plan: string;
  amount: number;
  telegram: string;
  createdAt: string;
}

export default function CodeGenerator() {
  const [clientName, setClientName] = useState('');
  const [selectedPlan, setSelectedPlan] = useState('');
  const [investmentAmount, setInvestmentAmount] = useState('');
  const [telegramUsername, setTelegramUsername] = useState('');
  const [generatedCode, setGeneratedCode] = useState('');
  const [copyMessage, setCopyMessage] = useState('');
  const { toast } = useToast();

  const plans = [
    { id: 'starter', name: '–°—Ç–∞—Ä—Ç–æ–≤—ã–π', minAmount: 500, maxAmount: 5000 },
    { id: 'standard', name: '–°—Ç–∞–Ω–¥–∞—Ä—Ç', minAmount: 1000, maxAmount: 25000 },
    { id: 'premium', name: '–ü—Ä–µ–º–∏—É–º', minAmount: 5000, maxAmount: 100000 }
  ];

  const generateInvestorCode = () => {
    if (!clientName || !selectedPlan || !investmentAmount) {
      toast({
        title: "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è",
        description: "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∏–º—è, —Ç–∞—Ä–∏—Ñ –∏ —Å—É–º–º—É –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏",
        variant: "destructive",
      });
      return;
    }

    const amount = Number(investmentAmount);
    const plan = plans.find(p => p.id === selectedPlan);
    
    if (plan && (amount < plan.minAmount || amount > plan.maxAmount)) {
      toast({
        title: "–ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞",
        description: `–î–ª—è —Ç–∞—Ä–∏—Ñ–∞ "${plan.name}" —Å—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç ${plan.minAmount.toLocaleString()} –¥–æ ${plan.maxAmount.toLocaleString()} ‚ÇΩ`,
        variant: "destructive",
      });
      return;
    }

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥
    const timestamp = Date.now().toString().slice(-6);
    const randomNum = Math.floor(Math.random() * 999).toString().padStart(3, '0');
    const code = `INV${timestamp}${randomNum}`.slice(0, 10);

    setGeneratedCode(code);

    // –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞
    const investorData = {
      code,
      name: clientName,
      plan: plans.find(p => p.id === selectedPlan)?.name || '',
      amount,
      telegram: telegramUsername,
      startDate: new Date().toISOString().split('T')[0],
      endDate: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // +3 –¥–Ω—è
      dailyReturn: 50,
      totalReturn: amount + (amount * 50 / 100), // 50% –∑–∞ 3 –¥–Ω—è
      status: 'active',
      daysLeft: 3
    };

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –±—É–¥–µ—Ç –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö)
    const existingCodes = JSON.parse(localStorage.getItem('generatedCodes') || '{}');
    existingCodes[code] = investorData;
    localStorage.setItem('generatedCodes', JSON.stringify(existingCodes));

    // –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞
    const demoInvestors = JSON.parse(localStorage.getItem('demoInvestors') || '{}');
    demoInvestors[code] = {
      name: clientName,
      totalInvested: amount,
      activeInvestments: [{
        id: Date.now(),
        plan: investorData.plan,
        amount: investorData.amount,
        startDate: investorData.startDate,
        endDate: investorData.endDate,
        dailyReturn: investorData.dailyReturn,
        totalReturn: investorData.totalReturn,
        status: investorData.status,
        daysLeft: investorData.daysLeft
      }]
    };
    localStorage.setItem('demoInvestors', JSON.stringify(demoInvestors));

    toast({
      title: "–ö–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! üéâ",
      description: `–ö–æ–¥ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞: ${code}`,
    });
  };

  const copyCodeToClipboard = () => {
    if (!generatedCode) return;

    const plan = plans.find(p => p.id === selectedPlan);
    const messageText = `üéâ –í–∞—à–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!

üë§ –ò–Ω–≤–µ—Å—Ç–æ—Ä: ${clientName}
üíº –¢–∞—Ä–∏—Ñ: ${plan?.name}
üí∞ –°—É–º–º–∞: ${Number(investmentAmount).toLocaleString()} ‚ÇΩ
üìà –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: 50% –∑–∞ 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è
üíµ –ö –≤—ã–ø–ª–∞—Ç–µ: ${(Number(investmentAmount) + Number(investmentAmount) * 0.5).toLocaleString()} ‚ÇΩ

üîë –í–∞—à –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞: ${generatedCode}

üì± –í–æ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –Ω–∞ —Å–∞–π—Ç–µ:
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–í—Ö–æ–¥ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞" –∏ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ–¥.

üìä –í –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ:
‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏
‚Ä¢ –í–∏–¥–µ—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è
‚Ä¢ –°–≤—è–∑—ã–≤–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
‚Ä¢ –°–∫–∞—á–∏–≤–∞—Ç—å –æ—Ç—á–µ—Ç—ã

–°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ! üöÄ`;

    navigator.clipboard.writeText(messageText).then(() => {
      setCopyMessage('–°–æ–æ–±—â–µ–Ω–∏–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –∫–ª–∏–µ–Ω—Ç—É –≤ Telegram');
      setTimeout(() => setCopyMessage(''), 3000);
    });
  };

  const resetForm = () => {
    setClientName('');
    setSelectedPlan('');
    setInvestmentAmount('');
    setTelegramUsername('');
    setGeneratedCode('');
    setCopyMessage('');
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-indigo-50 p-4">
      <div className="container mx-auto max-w-4xl">
        {/* Header */}
        <div className="text-center mb-8 pt-8">
          <div className="flex items-center justify-center space-x-2 mb-4">
            <div className="w-10 h-10 bg-gradient-to-r from-indigo-500 to-emerald-500 rounded-lg flex items-center justify-center">
              <Icon name="Settings" size={24} className="text-white" />
            </div>
            <h1 className="text-3xl font-bold text-gray-900">–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–¥–æ–≤</h1>
          </div>
          <p className="text-gray-600">–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤</p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* Form */}
          <Card>
            <CardHeader>
              <CardTitle>–î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞</CardTitle>
              <CardDescription>
                –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–º –∏–Ω–≤–µ—Å—Ç–æ—Ä–µ
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="space-y-2">
                <Label htmlFor="name">–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞</Label>
                <Input
                  id="name"
                  placeholder="–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤"
                  value={clientName}
                  onChange={(e) => setClientName(e.target.value)}
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="telegram">Telegram username (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</Label>
                <Input
                  id="telegram"
                  placeholder="@username"
                  value={telegramUsername}
                  onChange={(e) => setTelegramUsername(e.target.value)}
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="plan">–¢–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω</Label>
                <Select value={selectedPlan} onValueChange={setSelectedPlan}>
                  <SelectTrigger>
                    <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ" />
                  </SelectTrigger>
                  <SelectContent>
                    {plans.map((plan) => (
                      <SelectItem key={plan.id} value={plan.id}>
                        {plan.name} ({plan.minAmount.toLocaleString()} - {plan.maxAmount.toLocaleString()} ‚ÇΩ)
                      </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
              </div>

              <div className="space-y-2">
                <Label htmlFor="amount">–°—É–º–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ (‚ÇΩ)</Label>
                <Input
                  id="amount"
                  type="number"
                  placeholder="10000"
                  value={investmentAmount}
                  onChange={(e) => setInvestmentAmount(e.target.value)}
                />
                {selectedPlan && (
                  <p className="text-sm text-gray-500">
                    –õ–∏–º–∏—Ç—ã: {plans.find(p => p.id === selectedPlan)?.minAmount.toLocaleString()} - {plans.find(p => p.id === selectedPlan)?.maxAmount.toLocaleString()} ‚ÇΩ
                  </p>
                )}
              </div>

              <div className="flex space-x-2">
                <Button 
                  onClick={generateInvestorCode}
                  className="flex-1 bg-gradient-to-r from-indigo-600 to-indigo-700"
                >
                  <Icon name="Zap" size={16} className="mr-2" />
                  –°–æ–∑–¥–∞—Ç—å –∫–æ–¥
                </Button>
                <Button variant="outline" onClick={resetForm}>
                  <Icon name="RotateCcw" size={16} />
                </Button>
              </div>
            </CardContent>
          </Card>

          {/* Result */}
          <Card>
            <CardHeader>
              <CardTitle>–†–µ–∑—É–ª—å—Ç–∞—Ç</CardTitle>
              <CardDescription>
                –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
              </CardDescription>
            </CardHeader>
            <CardContent>
              {generatedCode ? (
                <div className="space-y-4">
                  <div className="p-4 bg-emerald-50 rounded-lg border border-emerald-200">
                    <div className="flex items-center justify-between mb-2">
                      <span className="font-medium text-emerald-800">–ö–æ–¥ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞</span>
                      <Badge className="bg-emerald-100 text-emerald-700">{generatedCode}</Badge>
                    </div>
                    <p className="text-sm text-emerald-700">
                      –ö–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ
                    </p>
                  </div>

                  <div className="space-y-2">
                    <Label>–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞</Label>
                    <Textarea
                      readOnly
                      value={`üéâ –í–∞—à–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!

üë§ –ò–Ω–≤–µ—Å—Ç–æ—Ä: ${clientName}
üíº –¢–∞—Ä–∏—Ñ: ${plans.find(p => p.id === selectedPlan)?.name}
üí∞ –°—É–º–º–∞: ${Number(investmentAmount).toLocaleString()} ‚ÇΩ
üìà –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: 50% –∑–∞ 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è
üíµ –ö –≤—ã–ø–ª–∞—Ç–µ: ${(Number(investmentAmount) + Number(investmentAmount) * 0.5).toLocaleString()} ‚ÇΩ

üîë –í–∞—à –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞: ${generatedCode}

üì± –í–æ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –Ω–∞ —Å–∞–π—Ç–µ:
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–í—Ö–æ–¥ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞" –∏ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ–¥.

üìä –í –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ:
‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏
‚Ä¢ –í–∏–¥–µ—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è
‚Ä¢ –°–≤—è–∑—ã–≤–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
‚Ä¢ –°–∫–∞—á–∏–≤–∞—Ç—å –æ—Ç—á–µ—Ç—ã

–°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ! üöÄ`}
                      className="min-h-[200px] text-sm"
                    />
                  </div>

                  <Button
                    onClick={copyCodeToClipboard}
                    className="w-full bg-gradient-to-r from-emerald-600 to-emerald-700"
                  >
                    <Icon name="Copy" size={16} className="mr-2" />
                    –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
                  </Button>

                  {copyMessage && (
                    <div className="p-3 bg-blue-50 rounded-lg border border-blue-200">
                      <p className="text-sm text-blue-700">{copyMessage}</p>
                    </div>
                  )}
                </div>
              ) : (
                <div className="text-center py-12 text-gray-500">
                  <Icon name="FileText" size={48} className="mx-auto mb-4 text-gray-400" />
                  <p>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –∏ –Ω–∞–∂–º–∏—Ç–µ "–°–æ–∑–¥–∞—Ç—å –∫–æ–¥"</p>
                </div>
              )}
            </CardContent>
          </Card>
        </div>

        {/* Instructions */}
        <Card className="mt-8">
          <CardHeader>
            <CardTitle>üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–∞–±–æ—Ç–µ</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div className="space-y-2">
                <div className="w-8 h-8 bg-indigo-100 text-indigo-600 rounded-lg flex items-center justify-center font-bold">1</div>
                <h4 className="font-semibold">–ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏</h4>
                <p className="text-sm text-gray-600">
                  –ö–ª–∏–µ–Ω—Ç –ø–∏—à–µ—Ç –≤–∞–º –≤ Telegram —Å –∑–∞—è–≤–∫–æ–π –Ω–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—é
                </p>
              </div>
              <div className="space-y-2">
                <div className="w-8 h-8 bg-indigo-100 text-indigo-600 rounded-lg flex items-center justify-center font-bold">2</div>
                <h4 className="font-semibold">–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–¥–∞</h4>
                <p className="text-sm text-gray-600">
                  –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã —Å–æ–∑–¥–∞–π—Ç–µ –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞ —á–µ—Ä–µ–∑ —ç—Ç—É —Ñ–æ—Ä–º—É
                </p>
              </div>
              <div className="space-y-2">
                <div className="w-8 h-8 bg-indigo-100 text-indigo-600 rounded-lg flex items-center justify-center font-bold">3</div>
                <h4 className="font-semibold">–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–ª–∏–µ–Ω—Ç—É</h4>
                <p className="text-sm text-gray-600">
                  –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≥–æ—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –≤ Telegram
                </p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}